apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ template "vault.fullname" . }}-{{.Values.Consul.PreInstall.ComponentName}}"
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: {{ template "vault.chart" . }}
    component: "{{ .Release.Name }}-{{.Values.Consul.PreInstall.ComponentName}}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "100"
spec:
  activeDeadlineSeconds: {{.Values.Consul.PreInstall.JobDeadline}}
  template:
    metadata:
      name: "{{ template "vault.fullname" . }}-{{.Values.Consul.PreInstall.ComponentName}}"
      labels:
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: {{ template "vault.chart" . }}
        component: "{{ .Release.Name }}-{{.Values.Consul.PreInstall.ComponentName}}"
    spec:
      restartPolicy: Never
      serviceAccount: {{ if .Values.rbac.create }}{{ template "vault.preinstall.fullname" . }}{{ else }}default{{ end }}
      initContainers:
        - name: copy-ro-scripts
          image: busybox
          command: ['sh', '-c', 'cp /scripts/* /etc/pre-install/']
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: pre-install
              mountPath: /etc/pre-install
      containers:
      - name: "{{ template "vault.fullname" . }}-{{.Values.Consul.PreInstall.ComponentName}}"
        image: "{{.Values.Misc.kubectl.Image}}:{{.Values.Misc.kubectl.ImageTag}}"
        imagePullPolicy: "Always"
        env:
          - name: FULL_NAME
            value: {{ template "vault.fullname" . }}
          - name: DATACENTER
            value: {{.Values.Consul.Datacenter}}
          - name: TLS_COUNTRY_NAME
            value: {{.Values.Consul.PreInstall.Tls.CountryName}}
          - name: TLS_LOCALITY_NAME
            value: {{.Values.Consul.PreInstall.Tls.LocalityName}}
          - name: TLS_EMAIL_ADDRESS
            value: {{.Values.Consul.PreInstall.Tls.EmailAddress}}
          - name: TLS_ORGANIZATION_NAME
            value: {{.Values.Consul.PreInstall.Tls.OrganizationName}}
          - name: TLS_STATE_OR_PROVINCE_NAME
            value: {{.Values.Consul.PreInstall.Tls.StateOrProvinceName}}
          - name: TLS_ORGANIZATION_UNIT_NAME
            value: {{.Values.Consul.PreInstall.Tls.OrganizationUnitName}}
        command:
        - "bash"
        - "-ec"
        - |
          chmod -R +x /pre-install
          cd /pre-install
          ./generate-consul-tls-certs.sh
          ./create-consul-secrets.sh
        volumeMounts:
        - name: pre-install
          mountPath: /pre-install
        - name: podinfo
          mountPath: /etc/podinfo
          readOnly: true
      volumes:
        - name: pre-install
          emptyDir: {}
        - name: scripts
          configMap:
            name: "{{ template "vault.fullname" . }}-{{.Values.Consul.PreInstall.ComponentName}}"
        - name: podinfo
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels

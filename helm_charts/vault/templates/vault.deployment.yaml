apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "vault.fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: {{ template "vault.chart" . }}
    component: "{{ .Release.Name }}-{{ .Values.Vault.ComponentName }}"
spec:
  replicas: {{ .Values.Vault.Replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      release: {{ .Release.Name | quote }}
      component: "{{ .Release.Name }}-{{ .Values.Vault.ComponentName }}"
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: {{ template "vault.chart" . }}
        component: "{{ .Release.Name }}-{{ .Values.Vault.ComponentName }}"
    spec:
      {{- if .Values.Vault.HostAliases }}
      hostAliases:
      {{- range .Values.Vault.HostAliases }}
      - ip: {{ .ip }}
        hostnames:
        {{- range .hostnames }}
        - {{ . }}
        {{- end }}
      {{- end }}
      {{- end }}
      containers:
      - name: {{ template "vault.fullname" . }}
        image: "{{.Values.Vault.Image}}:{{.Values.Vault.ImageTag}}"
        imagePullPolicy: {{.Values.Vault.ImagePullPolicy}}
        command:
          - "/bin/sh"
          - "-ec"
          - |
            cp /vault/config-ro/config.json /vault/config/config.json
            docker-entrypoint.sh server
        env:
        - name: "VAULT_CACERT"
          value: "/vault/tls/ca.crt"
        - name: "VAULT_LOG_LEVEL"
          value: "{{.Values.Vault.LogLevel}}"
        - name: "VAULT_TLS_SERVER_NAME"
          value: "{{.Values.Vault.Tls.ServerName}}"
        {{- if .Values.Vault.AutoUnseal }}
        lifecycle:
          postStart:
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  cp -R /post-start-ro /post-start
                  chmod -R +x /post-start
                  /post-start/unseal-vault.sh {{ template "tls_skip_verify" . }}
        {{- end }}
        readinessProbe:
          # Ready depends on preference
          httpGet:
            scheme: HTTPS
            path: /v1/sys/health?
              {{- if .Values.Vault.Readiness.readyIfStandby -}}standbycode=204&{{- end }}
              {{- if .Values.Vault.Readiness.readyIfSealed -}}sealedcode=204&{{- end }}
              {{- if .Values.Vault.Readiness.readyIfUninitialized -}}uninitcode=204&{{- end }}
            port: {{.Values.Vault.HttpPort}}
          initialDelaySeconds: 5
          periodSeconds: 5
        ports:
        - name: https
          containerPort: {{.Values.Vault.HttpPort}}
        - name: ha-forwarding
          containerPort: {{.Values.Vault.HaForwardingPort}}
        volumeMounts:
        - name: config
          mountPath: /vault/config-ro
        - name: tls
          mountPath: /vault/tls
        - name: ca-consul
          mountPath: /etc/vault/consul-ca
        {{- if .Values.Vault.AutoUnseal }}
        - name: vault-keys
          mountPath: /etc/vault/keys
        - name: post-start
          mountPath: /post-start-ro
        {{- end }}
        - name: consul-unix-socket
          mountPath: /consul-unix-socket
        {{- if .Values.Vault.HostAliases }}
        - name: nsswitch
          mountPath: /etc/nsswitch.conf
          subPath: nsswitch.conf
        {{- end }}
        resources:
          limits:
            cpu: {{ .Values.Vault.Cpu }}
            memory: {{ .Values.Vault.Memory }}
          requests:
            cpu: {{ .Values.Vault.Cpu }}
            memory: {{ .Values.Vault.Memory }}
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
      - name: "{{ template "vault.fullname" . }}-{{.Values.Vault.ConsulClient.ComponentName}}"
        image: "{{.Values.Consul.Image}}:{{.Values.Consul.ImageTag}}"
        imagePullPolicy: "{{.Values.Consul.ImagePullPolicy}}"
        securityContext:
        ports:
        - name: http
          containerPort: {{.Values.Consul.HttpPort}}
        - name: serflan-tcp
          protocol: "TCP"
          containerPort: {{.Values.Consul.SerflanPort}}
        - name: serflan-udp
          protocol: "UDP"
          containerPort: {{.Values.Consul.SerflanUdpPort}}
        - name: serfwan-tcp
          protocol: "TCP"
          containerPort: {{.Values.Consul.SerfwanPort}}
        - name: serfwan-udp
          protocol: "UDP"
          containerPort: {{.Values.Consul.SerfwanUdpPort}}
        - name: server
          containerPort: {{.Values.Consul.ServerPort}}
        - name: consuldns
          containerPort: {{.Values.Consul.ConsulDnsPort}}
        env:
        - name: INITIAL_CLUSTER_SIZE
          value: {{ .Values.Consul.Replicas | quote }}
        - name: STATEFULSET_NAME
          value: "{{ template "vault.fullname" . }}-{{.Values.Consul.ComponentName}}"
        - name: STATEFULSET_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: consul-config
          mountPath: /consul/config-ro
        - name: tls-consul
          mountPath: /consul/tls
          readOnly: true
        - name: ca-consul
          mountPath: /consul/ca
          readOnly: true
        - name: gossip-json
          mountPath: /consul/secrets
          readOnly: true
        - name: consul-unix-socket
          mountPath: /consul-unix-socket
        command:
          - "/bin/sh"
          - "-ec"
          - |
            cp /consul/config-ro/config.json /consul/config/config.json
            docker-entrypoint.sh \
              consul \
              agent \
              -config-dir=/consul/config \
              -config-dir=/consul/secrets \
              -retry-join={{ template "vault.fullname" . }}-{{.Values.Consul.ComponentName}}
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                release: {{ .Release.Name | quote }}
                component: "{{ .Release.Name }}-{{ .Values.Vault.ComponentName }}"
      volumes:
      - name: config
        configMap:
          name: {{ template "vault.fullname" . }}
          items:
          - key: config.json
            path: config.json
      - name: tls
        secret:
          secretName: {{ template "vault.fullname" . }}.tls
      - name: ca-consul
        secret:
          secretName: {{ template "vault.fullname" . }}-consul.ca
      - name: tls-consul
        secret:
          secretName: {{ template "vault.fullname" . }}-consul.tls
      {{- if .Values.Vault.AutoUnseal }}
      - name: vault-keys
        secret:
          secretName: {{ template "vault.fullname" . }}-vault-keys
      - name: post-start
        configMap:
          name: {{ template "vault.fullname" . }}-post-start
      {{- end }}
      - name: consul-config
        configMap:
          name: "{{ template "vault.fullname" . }}-{{.Values.Vault.ConsulClient.ComponentName}}"
      - name: gossip-json
        secret:
          secretName: {{ template "vault.fullname" . }}-consul-gossip-json
      - name: consul-unix-socket
        emptyDir: {}
      {{- if .Values.Vault.HostAliases }}
      - name: nsswitch
        configMap:
          name: "{{ template "vault.fullname" . }}"
          items:
          - key: nsswitch.conf
            path: nsswitch.conf
      {{- end }}
